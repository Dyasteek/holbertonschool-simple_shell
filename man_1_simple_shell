.TH man 1 "AUG 20 2025" "Holberton Simple Shell"

.SH NAME
    hsh - Holberton Simple Shell: command line interpreter

.SH SYNOPSIS
hsh

.SH DESCRIPTION
    .B hsh
    is a basic command line interpreter that reads and executes commands from user input,
    functioning similarly to a shell.
.PP
    .B hsh
    is compiled on Ubuntu 20.04 LTS with gcc and supports both interactive and non-interactive modes.
.PP
.SH USER INPUT
    When a user enters a command and presses Enter, the shell performs the following actions:

    1. Displays a prompt (maicolyeiston$) and waits for user input (interactive mode only).
    2. Reads the command using getline().
    3. Tokenizes the command into arguments using strtok() with delimiters: space, newline, tab.
    4. Checks if the command is a built-in command.
    5. If not built-in, searches for the command in PATH or current directory.
    6. Executes the command using fork() and execve().
.PP
.SH BUILT-IN COMMANDS
    .IP env
    Displays all environment variables.
    .IP exit
    Exits the shell with status code 0.
.PP
.SH EXTERNAL COMMANDS
    The shell can execute external commands by searching in the PATH environment variable.
    Commands can be specified with their full path (e.g., /bin/ls) or just the command name (e.g., ls).
    The shell also supports relative paths (e.g., ./program) and handles PATH being empty.
.PP
.SH ERROR HANDLING
    When a command is not found, the shell displays an error message in the format:
    "maicol: [line_number]: [command]: not found"
.PP
.SH MEMORY MANAGEMENT
    The shell manages memory allocation and deallocation:
    - Uses malloc() for dynamic memory allocation
    - Frees allocated memory before normal exit
    - Frees memory in child process on execution errors
    - No memory leaks detected by Valgrind
.PP
.SH SIGNAL HANDLING
    The shell can be terminated using Ctrl+C (SIGINT).
    When terminated abruptly, some memory may remain allocated.
    The shell displays a running emoji (üèÉ) when exiting in interactive mode.
.PP
.SH EXIT CODES
    - 0: Successful execution
    - 1: Command not found or execution error
    - Built-in exit always returns 0
.PP
.SH LIMITATIONS
    - Maximum of 1024 arguments per command
    - Supports both interactive and non-interactive modes
    - Limited built-in command support (env, exit)
    - No support for pipes, redirections, or aliases
.PP
.SH AUTHORS
    .PP
    Andres del Rio - https://github.com/Dyasteek
    .PP
    Erick Gaiero - https://github.com/ErickGaiero
    .PP
    Holberton School Project

    